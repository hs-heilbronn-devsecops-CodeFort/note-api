name: CI Pipeline

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

jobs:
  deploy-cloud-run:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    # Step 1: Checkout code
    - name: Checkout Repository Code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Step 2: Set up Python environment
    - name: Set Up Python Environment
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.7' # Using the latest agreed-upon version

    # Step 3: Upgrade pip and install dependencies
    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    # Step 4: Run tests and collect coverage
    - name: Run Unit Tests and Generate Coverage Report
      run: pytest --cov=src --cov-report=term-missing -n auto

    # Step 5: Upload coverage report to Codecov
    - name: Upload Coverage Report to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}

    # Step 6: Perform Snyk security scan
    - name: Run Snyk Security Scan
      uses: snyk/actions/python@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

    # Step 7: Log in to GitHub Container Registry
    - name: Log In to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN }}
   # Step 8: Build Docker image
    - name: Build Docker Image for Application
      run: |
        docker build -t ghcr.io/${{ github.repository }}:latest .

    # Step 9: Push Docker image to GitHub Container Registry
    - name: Push Docker Image to Registry
      run: |
        docker push ghcr.io/${{ github.repository }}:latest
    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v1
      with:
        workload_identity_provider: 'projects/70756149774/locations/global/workloadIdentityPools/github-actions/providers/github-repos'
        service_account: 'hshn-devsecops-service-account@hs-heilbronn-devsecops.iam.gserviceaccount.com'
        service_account_email: hshn-devsecops-service-account@hs-heilbronn-devsecops.iam.gserviceaccount.com

    # Step 9.1: Debug Authentication State
    - name: Debug Authentication State
      run: |
        gcloud auth list
        gcloud projects list
        gcloud run services list --region europe-west3

    # Step 9.2: Refresh Authentication Token
    - name: Refresh Authentication Token
      run: |
        gcloud auth list
        gcloud auth application-default login
        gcloud auth activate-service-account hshn-devsecops-service-account@hs-heilbronn-devsecops.iam.gserviceaccount.com --key-file=${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}

    # Step 11: Deploy application to Google Cloud Run
    - id: deploy
      name: Deploy Application to Google Cloud Run
      uses: google-github-actions/deploy-cloudrun@v2
      with:
        service: note-api-${{ github.repository_owner }}
        image: ghcr.io/${{ github.repository }}:v1.0
        region: europe-west3
        env_vars: BACKEND=memory

    # Step 12: Validate Deployment
    - name: Validate Cloud Run Deployment
      run: curl "${{ steps.deploy.outputs.url }}" | grep "Application is running successfully"

